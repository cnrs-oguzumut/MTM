#ifndef ENERGY_FUNCTIONS_H
#define ENERGY_FUNCTIONS_H

#include <Eigen/Dense>
#include <cmath>
#include <functional>




namespace energy_functions {

// Energy function that calculates strain energy from metric tensor C
inline auto phi_func = [](const Eigen::Matrix2d& C) -> double {
    double burgers = 1.0;
    double beta = -0.25;
    double K = 1.0;
    
    // Extract components from metric tensor
    double c11 = C(0, 0);
    double c22 = C(1, 1);
    double c12 = C(0, 1);  // Assuming C is symmetric, so C(0,1) = C(1,0)
    
    // Calculate determinant
    double detC = c11 * c22 - c12 * c12;
    
    // Calculate energy using the formula from the provided code
    double energy  =-K*(log((c11*c22-c12*c12)/burgers)-(c11*c22-c12*c12)/burgers)+beta*(pow(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22),2.0)*9.46969696969697E-4-pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),3.0)*(4.1E1/9.9E1)+((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12+c22,4.0)*(1.0/8.1E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(7.0/1.98E2))+pow(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22),2.0)*(1.7E1/5.28E2)+pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),3.0)*(4.0/1.1E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12+c22,3.0)*(1.0/2.7E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(8.0/3.3E1);

    
    return energy;
};

// Derivative function that calculates derivative of strain energy with respect to metric tensor C
inline auto dphi_func = [](const Eigen::Matrix2d& C) -> Eigen::Matrix2d {
    double burgers = 1.0;
    double beta = -0.25;
    double K = 1.0;
    
    // Extract components from metric tensor
    double c11 = C(0, 0);
    double c22 = C(1, 1);
    double c12 = C(0, 1);  // Assuming C is symmetric, so C(0,1) = C(1,0)
    
    // Calculate determinant
    double detC = c11 * c22 - c12 * c12;
    
    // Initialize derivative matrix
    Eigen::Matrix2d dPhi = Eigen::Matrix2d::Zero();
  
	dPhi(0,0)  = -beta*(pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),2.0)*((c11*(1.0/6.0)-c12*(2.0/3.0)+c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)-c22*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(4.1E1/3.3E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)+c22*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(1.0/5.28E2)-((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12+c22,3.0)*(4.0/8.1E1)-1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12+c22,4.0)*((c11*(1.0/6.0)-c12*(2.0/3.0)+c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)-c22*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(1.0/8.1E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(7.0/1.98E2)+c22*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0)*pow(c11-c12+c22,4.0)*(2.0/8.1E1)-((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)+c22*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(7.0/1.98E2)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*((c11*(1.0/6.0)-c12*(2.0/3.0)+c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)-c22*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(7.0/1.98E2)-c22*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12+c22)*(7.0/3.96E2))+K*(c22/burgers-c22/(c11*c22-c12*c12))+pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),2.0)*((c11*(1.0/6.0)-c12*(2.0/3.0)+c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)-c22*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(1.2E1/1.1E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)+c22*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(1.7E1/2.64E2)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12+c22,3.0)*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)+c22*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(1.0/2.7E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12+c22,2.0)*(1.0/9.0)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(8.0/3.3E1)+c22*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12+c22,3.0)*(1.0/1.8E1)-((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)+c22*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(8.0/3.3E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*((c11*(1.0/6.0)-c12*(2.0/3.0)+c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)-c22*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)-c22*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(8.0/3.3E1)-c22*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12+c22)*(4.0/3.3E1);
	dPhi(1,1)  =   beta*(pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),2.0)*((c11*(-1.0/6.0)+c12*(2.0/3.0)-c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)+c11*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(4.1E1/3.3E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*(-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)-c11*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(1.0/5.28E2)+((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12+c22,3.0)*(4.0/8.1E1)-1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12+c22,4.0)*((c11*(-1.0/6.0)+c12*(2.0/3.0)-c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)+c11*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(1.0/8.1E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(7.0/1.98E2)-c11*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0)*pow(c11-c12+c22,4.0)*(2.0/8.1E1)-((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)-c11*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(7.0/1.98E2)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*((c11*(-1.0/6.0)+c12*(2.0/3.0)-c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)+c11*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(7.0/1.98E2)+c11*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12+c22)*(7.0/3.96E2))+K*(c11/burgers-c11/(c11*c22-c12*c12))-pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),2.0)*((c11*(-1.0/6.0)+c12*(2.0/3.0)-c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)+c11*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(1.2E1/1.1E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*(-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)-c11*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(1.7E1/2.64E2)-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12+c22,3.0)*(-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)-c11*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(1.0/2.7E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12+c22,2.0)*(1.0/9.0)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(8.0/3.3E1)+c11*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12+c22,3.0)*(1.0/1.8E1)+((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/3.0)-c11*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/6.0)+1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11*2.0-c22*2.0)*(c11-c12*4.0+c22)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*(3.0/2.0))*(8.0/3.3E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*((c11*(-1.0/6.0)+c12*(2.0/3.0)-c22*(1.0/6.0))/(c11*c22-c12*c12)+(c11*(1.0/2.0)-c22*(1.0/2.0))/(c11*c22-c12*c12)+c11*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1)+c11*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/4.0))*(8.0/3.3E1)-c11*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12+c22)*(4.0/3.3E1);
	dPhi(0,1)  = pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),2.0)*((c11*(-2.0/3.0)+c12*(8.0/3.0)-c22*(2.0/3.0))/(c11*c22-c12*c12)+c12*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/6.0)+c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/2.0))*(1.2E1/1.1E1)-K*((c12*2.0)/burgers-(c12*2.0)/(c11*c22-c12*c12))+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*4.0-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(4.0/3.0)+c12*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/3.0)-c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*3.0)*(1.7E1/2.64E2)-beta*(pow((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12),2.0)*((c11*(-2.0/3.0)+c12*(8.0/3.0)-c22*(2.0/3.0))/(c11*c22-c12*c12)+c12*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/6.0)+c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/2.0))*(4.1E1/3.3E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*4.0-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(4.0/3.0)+c12*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/3.0)-c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*3.0)*(1.0/5.28E2)+((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12+c22,3.0)*(4.0/8.1E1)-1.0/pow(c11*c22-c12*c12,2.0)*((c11*(-2.0/3.0)+c12*(8.0/3.0)-c22*(2.0/3.0))/(c11*c22-c12*c12)+c12*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/6.0)+c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/2.0))*pow(c11-c12+c22,4.0)*(1.0/8.1E1)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(7.0/1.98E2)-c12*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0)*pow(c11-c12+c22,4.0)*(4.0/8.1E1)+((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*4.0-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(4.0/3.0)+c12*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/3.0)-c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*3.0)*(7.0/1.98E2)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/sqrt(c11*c22-c12*c12)*((c11*(-2.0/3.0)+c12*(8.0/3.0)-c22*(2.0/3.0))/(c11*c22-c12*c12)+c12*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/6.0)+c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/2.0))*(c11-c12+c22)*(7.0/1.98E2)+c12*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12+c22)*(7.0/1.98E2))-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12+c22,3.0)*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*4.0-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(4.0/3.0)+c12*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/3.0)-c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*3.0)*(1.0/2.7E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12+c22,2.0)*(1.0/9.0)-(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(8.0/3.3E1)-c12*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12+c22,3.0)*(1.0/9.0)+((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/sqrt(c11*c22-c12*c12)*(c11-c12+c22)*(pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*4.0-1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,2.0)*(4.0/3.0)+c12*1.0/pow(c11*c22-c12*c12,5.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/3.0)-c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,5.0/2.0)*(c11-c12*4.0+c22)*3.0)*(8.0/3.3E1)+(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*1.0/sqrt(c11*c22-c12*c12)*((c11*(-2.0/3.0)+c12*(8.0/3.0)-c22*(2.0/3.0))/(c11*c22-c12*c12)+c12*1.0/pow(c11*c22-c12*c12,2.0)*pow(c11-c12*4.0+c22,2.0)*(1.0/6.0)+c12*pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,2.0)*(1.0/2.0))*(c11-c12+c22)*(8.0/3.3E1)+c12*(1.0/pow(c11*c22-c12*c12,3.0/2.0)*pow(c11-c12*4.0+c22,3.0)*(1.0/9.0)-pow(c11-c22,2.0)*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12*4.0+c22))*((pow(c11-c22,2.0)*(1.0/4.0))/(c11*c22-c12*c12)+(pow(c11-c12*4.0+c22,2.0)*(1.0/1.2E1))/(c11*c22-c12*c12))*1.0/pow(c11*c22-c12*c12,3.0/2.0)*(c11-c12+c22)*(8.0/3.3E1);


    
    dPhi(1,0) = dPhi(0,1)/2;
    dPhi(0,1) = dPhi(0,1)/2;
    return dPhi;
};

} // namespace energy_functions

#endif // ENERGY_FUNCTIONS_H